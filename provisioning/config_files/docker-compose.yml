version: "3.9"
services:

#---------- portainer ----------#
  portainer:
    image: portainer/portainer-ce
    container_name: portainer
    environment:
      - PUID=1000
      - PGID=1000
    ports:
      - "9000:9000"
    volumes:
      - $docker_dir/appdata/portainer:/data
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always

#---------- mosquitto ----------#
  mosquitto:
    container_name: mqtt
    image: eclipse-mosquitto
    ports:
      - 1883:1883
      - 8883:8883
      - 9001:9001
    volumes:
      - $docker_dir/appdata/mosquitto/config:/mosquitto/config
      - $docker_dir/appdata/mosquitto/data:/mosquitto/data
      - $docker_dir/appdata/mosquitto/log:/mosquitto/log
    restart:
      always
    networks:
      - mosquitto

#---------- node-red ----------#
  node-red:
    image: nodered/node-red:latest
    container_name: node-red
    environment:
      - TZ=Europe/Dublin
      - PUID=1000
      - PGID=1000
    ports:
      - "1880:1880"
    networks:
      - node-red-net
    volumes:
      - $docker_dir/appdata/node_red/data:/data      


#---------- influxdb ----------#
  influxdb:
    image: influxdb:latest
    container_name: influxdb
#    security_opt:
#      - no-new-privileges:true
    restart: unless-stopped
    ports:
      - "8086:8086"
    volumes:
      - $docker_dir/appdata/influxdb2/config:/etc/influxdb2
      - $docker_dir/appdata/influxdb2/db:/var/lib/influxdb2
    networks:
      - grafana-monitoring      

#---------- prometheus ----------#
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: unless-stopped
    ports:
      - 9090:9090
    volumes:
      - $docker_dir/appdata/prometheus/config/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - grafana-monitoring


#---------- grafana ----------#
  grafana:
    image: grafana/grafana-enterprise
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    user: "0"
    depends_on:
      - influxdb
    links:
      - influxdb
    volumes:
      - $docker_dir/appdata/grafana:/var/lib/grafana
    environment:
      GF_INSTALL_PLUGINS: "grafana-clock-panel,grafana-simple-json-datasource,grafana-worldmap-panel,grafana-piechart-panel"
    networks:
      - grafana-monitoring


#---------- heimdall ----------#
  heimdall:
    image: ghcr.io/linuxserver/heimdall
    container_name: heimdall
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Dublin
    ports:
      - "443:443"
    volumes:
      - $docker_dir/appdata/heimdall:/config

#---------- homer ----------#
  homer:
    image: b4bz/homer
    container_name: homer
    volumes:
      - $docker_dir/appdata/homer:/www/assets
    ports:
      - 8092:8080
#    environment:
#      - UID=1000
#      - GID=1000
    restart: unless-stopped
    user: 1000:1000

#---------- excalidraw ----------#
  excalidraw:
    image: excalidraw/excalidraw:latest
    restart: always
    ports:
      - 8084:80
    container_name: excalidraw

#---------- telegraf ----------#
  telegraf:
    container_name: telegraf
    restart: unless-stopped
    user: telegraf:999 #you need to find the GID of Docker if not added to Sudo group
    networks:
      - grafana-monitoring
    volumes:
        - '$docker_dir/appdata/telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro'
        - '/:/hostfs:ro' # to monitor docker-vm
        - '/var/run/docker.sock:/var/run/docker.sock' # to monitor docker containers
      #  - '$docker_dir/appdata/telegraf/mibs:/usr/share/snmp/mibs' # mibs files [e.g., sophos]
    environment:
        - HOST_ETC=/hostfs/etc
        - HOST_PROC=/hostfs/proc
        - HOST_SYS=/hostfs/sys
        - HOST_VAR=/hostfs/var
        - HOST_RUN=/hostfs/run
        - HOST_MOUNT_PREFIX=/hostfs
    image: telegraf:latest

#---------- networks ----------#
networks:
    grafana-monitoring:
    mosquitto:
        name: mosquitto
        driver: bridge
    node-red-net:
        name: node-red-net
        driver: bridge        
