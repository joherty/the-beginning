version: "3.9"
services:
#################### portainer
  portainer:
    image: portainer/portainer-ce
    container_name: portainer
    environment:
      - PUID=1000
      - PGID=1000
    ports:
      - "9000:9000"
    volumes:
      - $docker_dir/appdata/portainer:/data
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always

#################### watchtower
  watchtower:
    container_name: watchtower
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --schedule "0 0 9 * * SUN" --cleanup
    environment:
      - NETWORK_ACCESS=internal
    restart:
      always 

################### heimdall
  heimdall:
    image: ghcr.io/linuxserver/heimdall
    container_name: heimdall
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Dublin
    ports:
      - "443:443"
    volumes:
      - $docker_dir/appdata/heimdall:/config
    restart:
      always

#################### mqtt
  mosquitto:
    container_name: mqtt
    image: eclipse-mosquitto
    ports:
      - 1883:1883
      - 8883:8883
      - 9001:9001
    volumes:
      - $docker_dir/appdata/mosquitto/config:/mosquitto/config
      - $docker_dir/appdata/mosquitto/data:/mosquitto/data
      - $docker_dir/appdata/mosquitto/log:/mosquitto/log
    restart:
      always
    networks:
      - mosquitto

##################### node-red
  node-red:
    image: nodered/node-red:latest
    container_name: node-red
    environment:
      - TZ=Europe/Dublin
      - PUID=1000
      - PGID=1000
    ports:
      - "1880:1880"
    networks:
      - node-red-net
    volumes:
      - $docker_dir/appdata/node_red/data:/data      


#---------- influxdb ----------#
  influxdb:
    image: influxdb:latest
    container_name: influxdb
    networks:
      - default
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    ports:
      - "8086:8086"
    volumes:
      - $docker_dir/appdata/influxdb2/config:/etc/influxdb2
      - $docker_dir/appdata/influxdb2/db:/var/lib/influxdb2


#---------- grafana ----------#
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    networks:
      - default
    ports:
      - "3000:3000"
    user: "1000"
    volumes:
      - $docker_dir/appdata/grafana:/var/lib/grafana
    environment:
      GF_INSTALL_PLUGINS: "grafana-clock-panel,grafana-simple-json-datasource,grafana-worldmap-panel,grafana-piechart-panel"


networks:
    mosquitto:
        name: mosquitto
        driver: bridge
    node-red-net:
        name: node-red-net
        driver: bridge        