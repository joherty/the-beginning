### This playbook will provision the full environment.
### Before running this playbook add the ansible ssh key to the server(s)
### ssh-copy-id -i ~/.ssh/ansible.pub serverip
---

  - name: provision servers
    hosts: 10.0.0.21
    become: true
    vars_files:
      - vars.yml
      - credentials.yml
      - ssh_keys.yml
    tasks:


#---------- Update Repos ----------#

    - name: update repository index
      apt:
        update_cache: yes


#---------- Install and enable qemu agent ----------#

    - name: install qemu agent
      apt:
        name: qemu-guest-agent
        state: latest


    - name: start qemu-agent
      ansible.builtin.systemd:
        state: started
        name: qemu-guest-agent


    - name: enable qemu-agent
      ansible.builtin.systemd:
        enabled: yes
        name: qemu-guest-agent


#---------- Install Docker ----------#

    - name: create directory /home/john/containers
      file:
        path: "{{ docker_dir }}"
        state: directory

    - name: copy docker .env to the server(s)
      ansible.builtin.copy:
        src: /home/john/code/the-beginning/provisioning/config_files/.env
        dest: "{{ docker_dir }}/.env"
        owner: john
        group: john
        mode: u=rw,g=r,o=r

    - name: Install aptitude
      apt:
        name: aptitude
        state: latest
        update_cache: true

    - name: Install required system packages
      apt:
        pkg:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
          - python3-pip
          - virtualenv
          - python3-setuptools
        state: latest
        update_cache: true

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu focal stable
        state: present

    - name: Install docker-ce
      apt:
        name: docker-ce
        state: latest
        update_cache: true

    - name: Install Docker Module for Python
      pip:
        name: docker

    - name: Add user to docker group
      user:
        name: john
        group: docker


#---------- Install Docker Compose ----------#

    - name: Download docker-compose {{ docker_compose_version }}
      get_url:
        url : https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-Linux-x86_64
        dest: ~/docker-compose
        mode: '+x'

    - name: Check docker-compose exists
      stat: path=~/docker-compose
      register: docker_compose

    - name: Move docker-compose to /usr/local/bin/docker-compose
      command: mv ~/docker-compose /usr/local/bin/docker-compose
      when: docker_compose.stat.exists

#---------- Copy docker-compose.yml to the server ----------#

    - name: copy docker-compose.yml to the server(s)
      ansible.builtin.copy:
        src: /home/john/code/the-beginning/provisioning/config_files/docker-compose.yml
        dest: "{{ docker_dir }}/docker-compose.yml"
        owner: john
        group: john
        mode: u=rw,g=r,o=r

#---------- Configure mosquitto ----------#

    - name: create directory /appdata/mosquitto/config
      file:
        path: "{{ docker_dir }}/appdata/mosquitto/config"
        state: directory


    - name: copy mosquitto.conf to the server(s)
      ansible.builtin.copy:
        src: /home/john/code/the-beginning/provisioning/config_files/mosquitto.conf
        dest: "{{ docker_dir }}/appdata/mosquitto/config/mosquitto.conf"
        owner: john
        group: john
        mode: u=rw,g=r,o=r

    - name: copy mosquitto.passwd to the server(s)
      ansible.builtin.copy:
        src: /home/john/code/the-beginning/provisioning/config_files/mosquitto.passwd
        dest: "{{ docker_dir }}/appdata/mosquitto/config/mosquitto.passwd"
        owner: john
        group: john
        mode: u=rw,g=r,o=r

#---------- Configure grafana directory permissions----------#

    - name: create directory /appdata/grafana
      file:
        path: "{{ docker_dir }}/appdata/grafana"
        state: directory
        owner: john
        group: john
        mode: u=rw,g=r,o=r

#---------- Run docker-compose.yml ----------#

    - name: move to {{ docker_dir }} and run docker-compose.yml
      ansible.builtin.shell: cd {{ docker_dir }} && docker-compose -f docker-compose.yml up -d --remove-orphans

#---------- Configure node-red ----------#

    - name: Set node-red folder ownership to john
      ansible.builtin.file:
        path: "{{ docker_dir }}/appdata/node_red"
        state: directory
        recurse: yes
        owner: john
        group: john

    - name: start the node-red container
      ansible.builtin.shell: docker start node-red
